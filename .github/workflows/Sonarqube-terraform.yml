name: 🔄 Build, Analyze and Push Infrastructure Code

on:
  push:
    branches:
      - main

jobs:
  analyze:
    name: 🔍 Code Analysis
    runs-on: ubuntu-latest
    outputs:
      analysis_status: ${{ steps.set-status.outputs.status }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      # Run SonarQube scan
      - name: Run SonarQube scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
      # Set status for summary job
      - name: Set status
        id: set-status
        if: success()
        run: echo "status=success" >> $GITHUB_OUTPUT
      
  check-and-package:
    name: 📦 Check and Package Infrastructure
    runs-on: ubuntu-latest
    needs: analyze
    outputs:
      infrastructure_exists: ${{ steps.check-folder.outputs.infrastructure_exists }}
      package_status: ${{ steps.set-status.outputs.status }}
    steps:
      - uses: actions/checkout@v2
      
      # Check if infrastructure folder exists
      - name: Check infrastructure folder
        id: check-folder
        run: |
          if [ -d "infrastructure" ]; then
            echo "infrastructure_exists=true" >> $GITHUB_OUTPUT
            echo "Infrastructure folder found"
          else
            echo "infrastructure_exists=false" >> $GITHUB_OUTPUT
            echo "Infrastructure folder not found"
          fi
      
      # Package infrastructure folder
      - name: Package Infrastructure Code
        id: package
        if: steps.check-folder.outputs.infrastructure_exists == 'true'
        run: |
          tar -czf infrastructure.tar.gz infrastructure/
          echo "Infrastructure folder packaged"
      
      # Upload artifact for next job
      - name: Upload infrastructure package
        if: steps.check-folder.outputs.infrastructure_exists == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: infrastructure-package
          path: infrastructure.tar.gz
          retention-days: 1
          
      # Set status for summary job
      - name: Set status
        id: set-status
        if: success()
        run: echo "status=success" >> $GITHUB_OUTPUT

  deploy:
    name: 🚀 Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: check-and-package
    if: needs.check-and-package.outputs.infrastructure_exists == 'true'
    outputs:
      deploy_status: ${{ steps.set-status.outputs.status }}
    steps:
      # Download the infrastructure package
      - name: Download infrastructure package
        uses: actions/download-artifact@v2
        with:
          name: infrastructure-package
      
      # Push to webhook
      - name: Push to Webhook
        run: |
          curl -X POST \
            -H "Content-Type: application/octet-stream" \
            -H "Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}" \
            --data-binary @infrastructure.tar.gz \
            http://david-app-lb-2066701148.us-east-1.elb.amazonaws.com:9000/api/infrastructure
      
      # Set status for summary job
      - name: Set status
        id: set-status
        if: success()
        run: echo "status=success" >> $GITHUB_OUTPUT

  summary:
    name: 📊 Workflow Summary
    runs-on: ubuntu-latest
    needs: [analyze, check-and-package, deploy]
    if: always()
    steps:
      - name: Provide Summary
        run: |
          echo "# Infrastructure Workflow Summary 📋" >> $GITHUB_STEP_SUMMARY
          
          # Analysis Status
          if [[ "${{ needs.analyze.outputs.analysis_status }}" == "success" ]]; then
            echo "## Analysis ✅" >> $GITHUB_STEP_SUMMARY
            echo "SonarQube scan completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "## Analysis ❌" >> $GITHUB_STEP_SUMMARY
            echo "SonarQube scan failed or had issues" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check and Package Status
          if [[ "${{ needs.check-and-package.outputs.package_status }}" == "success" ]]; then
            echo "## Infrastructure Check ✅" >> $GITHUB_STEP_SUMMARY
            
            if [[ "${{ needs.check-and-package.outputs.infrastructure_exists }}" == "true" ]]; then
              echo "Infrastructure folder found and packaged successfully 📦" >> $GITHUB_STEP_SUMMARY
            else
              echo "Infrastructure folder not found 🔍" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "## Infrastructure Check ❌" >> $GITHUB_STEP_SUMMARY
            echo "Failed to check or package infrastructure" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Deploy Status
          if [[ "${{ needs.check-and-package.outputs.infrastructure_exists }}" != "true" ]]; then
            echo "## Deploy 🚫" >> $GITHUB_STEP_SUMMARY
            echo "Deployment skipped as no infrastructure folder was found" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy.outputs.deploy_status }}" == "success" ]]; then
            echo "## Deploy ✅" >> $GITHUB_STEP_SUMMARY
            echo "Infrastructure successfully deployed to webhook 🚀" >> $GITHUB_STEP_SUMMARY
          else
            echo "## Deploy ❌" >> $GITHUB_STEP_SUMMARY
            echo "Failed to deploy infrastructure to webhook" >> $GITHUB_STEP_SUMMARY
          fi