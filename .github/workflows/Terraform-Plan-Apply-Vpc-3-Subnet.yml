name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Step 1: Read version and create tag
  version-and-tag:
    name: Create Version Tag
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.get_version.outputs.version_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTH_TOKEN }}
      
      - name: Bump version and create tag
        id: create_tag
        uses: melheffe/version_release_composer@master
        env:
          PREPEND: 'v'
          APPEND: '.aws'
          DRAFT: 'false'
          PRERELEASE: 'true'
          TOKEN: ${{ secrets.AUTH_TOKEN }}
          TRIGGER: ${{ github.ref_name }}
          REPO_OWNER: rohit
          VERSION_FILE_NAME: 'VERSION'
      
      - name: Get created tag
        id: get_version
        run: |
          # Extract the tag created in previous step
          echo "version_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"
  
  # Step 2: Build the application
  build:
    name: Build Application
    needs: version-and-tag
    runs-on: ubuntu-latest
    outputs:
      build_id: ${{ steps.build_info.outputs.build_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTH_TOKEN }}
          ref: ${{ needs.version-and-tag.outputs.version_tag }}
      
      - name: Set up build environment
        run: |
          echo "Setting up build environment"
          # Add your build setup steps here
      
      - name: Build application
        run: |
          echo "Building application with tag ${{ needs.version-and-tag.outputs.version_tag }}"
          # Add your build commands here
      
      - name: Generate build info
        id: build_info
        run: |
          echo "build_id=${{ github.run_id }}-${{ github.run_number }}" >> "$GITHUB_OUTPUT"

  # Step 3: Run tests
  test:
    name: Test Application
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTH_TOKEN }}
          ref: ${{ needs.version-and-tag.outputs.version_tag }}
      
      - name: Run tests
        run: |
          echo "Running tests for build ${{ needs.build.outputs.build_id }}"
          # Add your test commands here

  # Step 4: Deploy to Dev environment
  deploy-dev:
    name: Deploy to Dev
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: Dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTH_TOKEN }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          # Build a docker container and push it to ECR
          echo "Using tag: ${{ needs.version-and-tag.outputs.version_tag }}"
          docker build -t ${{secrets.ECR_REPO_URI}}/${{secrets.REPO_NAME}}:${{ needs.version-and-tag.outputs.version_tag }} .
          docker push ${{secrets.ECR_REPO_URI}}/${{secrets.REPO_NAME}}:${{ needs.version-and-tag.outputs.version_tag }}